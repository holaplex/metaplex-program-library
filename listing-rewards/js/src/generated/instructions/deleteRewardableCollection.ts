/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import {
  DeleteRewardableCollectionParams,
  deleteRewardableCollectionParamsBeet,
} from '../types/DeleteRewardableCollectionParams';

/**
 * @category Instructions
 * @category DeleteRewardableCollection
 * @category generated
 */
export type DeleteRewardableCollectionInstructionArgs = {
  rewardableCollectionParams: DeleteRewardableCollectionParams;
};
/**
 * @category Instructions
 * @category DeleteRewardableCollection
 * @category generated
 */
const deleteRewardableCollectionStruct = new beet.BeetArgsStruct<
  DeleteRewardableCollectionInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */;
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['rewardableCollectionParams', deleteRewardableCollectionParamsBeet],
  ],
  'DeleteRewardableCollectionInstructionArgs',
);
/**
 * Accounts required by the _deleteRewardableCollection_ instruction
 *
 * @property [_writable_, **signer**] wallet
 * @property [_writable_] rewardableCollection
 * @property [] auctionHouse
 * @property [] rewardCenter
 * @category Instructions
 * @category DeleteRewardableCollection
 * @category generated
 */
export type DeleteRewardableCollectionInstructionAccounts = {
  wallet: web3.PublicKey;
  rewardableCollection: web3.PublicKey;
  auctionHouse: web3.PublicKey;
  rewardCenter: web3.PublicKey;
};

const deleteRewardableCollectionInstructionDiscriminator = [81, 115, 237, 157, 176, 15, 157, 127];

/**
 * Creates a _DeleteRewardableCollection_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category DeleteRewardableCollection
 * @category generated
 */
export function createDeleteRewardableCollectionInstruction(
  accounts: DeleteRewardableCollectionInstructionAccounts,
  args: DeleteRewardableCollectionInstructionArgs,
) {
  const { wallet, rewardableCollection, auctionHouse, rewardCenter } = accounts;

  const [data] = deleteRewardableCollectionStruct.serialize({
    instructionDiscriminator: deleteRewardableCollectionInstructionDiscriminator,
    ...args,
  });
  const keys: web3.AccountMeta[] = [
    {
      pubkey: wallet,
      isWritable: true,
      isSigner: true,
    },
    {
      pubkey: rewardableCollection,
      isWritable: true,
      isSigner: false,
    },
    {
      pubkey: auctionHouse,
      isWritable: false,
      isSigner: false,
    },
    {
      pubkey: rewardCenter,
      isWritable: false,
      isSigner: false,
    },
  ];

  const ix = new web3.TransactionInstruction({
    programId: new web3.PublicKey('rwdLstiU8aJU1DPdoPtocaNKApMhCFdCg283hz8dd3u'),
    keys,
    data,
  });
  return ix;
}
